install
cdrom
lang en_US.UTF-8
keyboard us
network --bootproto=dhcp
rootpw vagrant
firewall --disabled
selinux --permissive
timezone UTC
unsupported_hardware

repo --name=elrepo-kernel --includepkgs=kernel-lt --baseurl=http://elrepo.org/linux/kernel/el6/x86_64/

bootloader --location=mbr
text
skipx
zerombr

clearpart --all --initlabel
part /boot --fstype ext4 --size=512 --ondisk=sda
part swap --fstype swap --size=2048
part pv.0 --size=35000 --grow --ondisk=sda
volgroup VolGroup00 pv.0
logvol / --fstype ext4 --name=lv_slash --vgname=VolGroup00 --size=10 --grow
logvol /var/lib/docker --fstype ext4 --name=lv_docker --vgname=VolGroup00 --size=20000  
auth --enableshadow --passalgo=sha512 --kickstart
firstboot --disabled
reboot
user --name=vagrant --plaintext --password vagrant

%packages --nobase --ignoremissing --excludedocs
# vagrant needs this to copy initial files via scp
openssh-clients
sudo
kernel-headers
kernel-devel
kernel-lt
libcgroup
gcc
make
perl
wget
nfs-utils
-fprintd-pam
-intltool

# unnecessary firmware
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
-libertas-usb8388-firmware
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware

%post
# Set the system to boot the second kernel, which should be our mainline kernel
sed -i 's/default=0/default=1/' /boot/grub/grub.conf
# Force to set SELinux to a permissive mode
sed -i -e 's/\(^SELINUX=\).*$/\1permissive/' /etc/selinux/config
# sudo
echo "%vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers
